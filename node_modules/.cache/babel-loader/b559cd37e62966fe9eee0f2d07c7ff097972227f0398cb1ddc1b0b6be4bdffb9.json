{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/forit/ai_hospitality_app/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"C:/Users/forit/ai_hospitality_app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nconst _excluded = [\"format\"],\n  _excluded2 = [\"children\", \"count\", \"parent\", \"i18nKey\", \"context\", \"tOptions\", \"values\", \"defaults\", \"components\", \"ns\", \"i18n\", \"t\", \"shouldUnescape\"];\nimport { Fragment, isValidElement, cloneElement, createElement, Children } from 'react';\nimport HTML from 'html-parse-stringify';\nimport { isObject, isString, warn, warnOnce } from './utils.js';\nimport { getDefaults } from './defaults.js';\nimport { getI18n } from './i18nInstance.js';\nconst hasChildren = (node, checkLength) => {\n  var _node$props$children, _node$props;\n  if (!node) return false;\n  const base = (_node$props$children = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.children) !== null && _node$props$children !== void 0 ? _node$props$children : node.children;\n  if (checkLength) return base.length > 0;\n  return !!base;\n};\nconst getChildren = node => {\n  var _node$props$children2, _node$props2, _node$props3;\n  if (!node) return [];\n  const children = (_node$props$children2 = (_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.children) !== null && _node$props$children2 !== void 0 ? _node$props$children2 : node.children;\n  return (_node$props3 = node.props) !== null && _node$props3 !== void 0 && _node$props3.i18nIsDynamicList ? getAsArray(children) : children;\n};\nconst hasValidReactChildren = children => Array.isArray(children) && children.every(isValidElement);\nconst getAsArray = data => Array.isArray(data) ? data : [data];\nconst mergeProps = (source, target) => {\n  const newTarget = _objectSpread({}, target);\n  newTarget.props = Object.assign(source.props, target.props);\n  return newTarget;\n};\nexport const nodesToString = (children, i18nOptions, i18n, i18nKey) => {\n  var _i18nOptions$transKee;\n  if (!children) return '';\n  let stringNode = '';\n  const childrenArray = getAsArray(children);\n  const keepArray = i18nOptions !== null && i18nOptions !== void 0 && i18nOptions.transSupportBasicHtmlNodes ? (_i18nOptions$transKee = i18nOptions.transKeepBasicHtmlNodesFor) !== null && _i18nOptions$transKee !== void 0 ? _i18nOptions$transKee : [] : [];\n  childrenArray.forEach((child, childIndex) => {\n    if (isString(child)) {\n      stringNode += \"\".concat(child);\n      return;\n    }\n    if (isValidElement(child)) {\n      const {\n        props,\n        type\n      } = child;\n      const childPropsCount = Object.keys(props).length;\n      const shouldKeepChild = keepArray.indexOf(type) > -1;\n      const childChildren = props.children;\n      if (!childChildren && shouldKeepChild && !childPropsCount) {\n        stringNode += \"<\".concat(type, \"/>\");\n        return;\n      }\n      if (!childChildren && (!shouldKeepChild || childPropsCount) || props.i18nIsDynamicList) {\n        stringNode += \"<\".concat(childIndex, \"></\").concat(childIndex, \">\");\n        return;\n      }\n      if (shouldKeepChild && childPropsCount === 1 && isString(childChildren)) {\n        stringNode += \"<\".concat(type, \">\").concat(childChildren, \"</\").concat(type, \">\");\n        return;\n      }\n      const content = nodesToString(childChildren, i18nOptions, i18n, i18nKey);\n      stringNode += \"<\".concat(childIndex, \">\").concat(content, \"</\").concat(childIndex, \">\");\n      return;\n    }\n    if (child === null) {\n      warn(i18n, 'TRANS_NULL_VALUE', \"Passed in a null value as child\", {\n        i18nKey\n      });\n      return;\n    }\n    if (isObject(child)) {\n      const {\n          format\n        } = child,\n        clone = _objectWithoutProperties(child, _excluded);\n      const keys = Object.keys(clone);\n      if (keys.length === 1) {\n        const value = format ? \"\".concat(keys[0], \", \").concat(format) : keys[0];\n        stringNode += \"{{\".concat(value, \"}}\");\n        return;\n      }\n      warn(i18n, 'TRANS_INVALID_OBJ', \"Invalid child - Object should only have keys {{ value, format }} (format is optional).\", {\n        i18nKey,\n        child\n      });\n      return;\n    }\n    warn(i18n, 'TRANS_INVALID_VAR', \"Passed in a variable like {number} - pass variables for interpolation as full objects like {{number}}.\", {\n      i18nKey,\n      child\n    });\n  });\n  return stringNode;\n};\nconst renderNodes = (children, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) => {\n  if (targetString === '') return [];\n  const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.map(keep => \"<\".concat(keep)).join('|')).test(targetString);\n  if (!children && !emptyChildrenButNeedsHandling && !shouldUnescape) return [targetString];\n  const data = {};\n  const getData = childs => {\n    const childrenArray = getAsArray(childs);\n    childrenArray.forEach(child => {\n      if (isString(child)) return;\n      if (hasChildren(child)) getData(getChildren(child));else if (isObject(child) && !isValidElement(child)) Object.assign(data, child);\n    });\n  };\n  getData(children);\n  const ast = HTML.parse(\"<0>\".concat(targetString, \"</0>\"));\n  const opts = _objectSpread(_objectSpread({}, data), combinedTOpts);\n  const renderInner = (child, node, rootReactNode) => {\n    var _child$props;\n    const childs = getChildren(child);\n    const mappedChildren = mapAST(childs, node.children, rootReactNode);\n    return hasValidReactChildren(childs) && mappedChildren.length === 0 || (_child$props = child.props) !== null && _child$props !== void 0 && _child$props.i18nIsDynamicList ? childs : mappedChildren;\n  };\n  const pushTranslatedJSX = (child, inner, mem, i, isVoid) => {\n    if (child.dummy) {\n      child.children = inner;\n      mem.push(cloneElement(child, {\n        key: i\n      }, isVoid ? undefined : inner));\n    } else {\n      mem.push(...Children.map([child], c => {\n        var _c$props$ref;\n        const props = _objectSpread({}, c.props);\n        delete props.i18nIsDynamicList;\n        return createElement(c.type, _objectSpread(_objectSpread({}, props), {}, {\n          key: i,\n          ref: (_c$props$ref = c.props.ref) !== null && _c$props$ref !== void 0 ? _c$props$ref : c.ref\n        }), isVoid ? null : inner);\n      }));\n    }\n  };\n  const mapAST = (reactNode, astNode, rootReactNode) => {\n    const reactNodes = getAsArray(reactNode);\n    const astNodes = getAsArray(astNode);\n    return astNodes.reduce((mem, node, i) => {\n      var _node$children;\n      const translationContent = ((_node$children = node.children) === null || _node$children === void 0 || (_node$children = _node$children[0]) === null || _node$children === void 0 ? void 0 : _node$children.content) && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n      if (node.type === 'tag') {\n        let tmp = reactNodes[parseInt(node.name, 10)];\n        if (rootReactNode.length === 1 && !tmp) tmp = rootReactNode[0][node.name];\n        if (!tmp) tmp = {};\n        const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n          props: node.attrs\n        }, tmp) : tmp;\n        const isElement = isValidElement(child);\n        const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n        const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && isObject(child) && child.dummy && !isElement;\n        const isKnownComponent = isObject(children) && Object.hasOwnProperty.call(children, node.name);\n        if (isString(child)) {\n          const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n          mem.push(value);\n        } else if (hasChildren(child) || isValidTranslationWithChildren) {\n          const inner = renderInner(child, node, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (isEmptyTransWithHTML) {\n          const inner = mapAST(reactNodes, node.children, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (Number.isNaN(parseFloat(node.name))) {\n          if (isKnownComponent) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n            if (node.voidElement) {\n              mem.push(createElement(node.name, {\n                key: \"\".concat(node.name, \"-\").concat(i)\n              }));\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(createElement(node.name, {\n                key: \"\".concat(node.name, \"-\").concat(i)\n              }, inner));\n            }\n          } else if (node.voidElement) {\n            mem.push(\"<\".concat(node.name, \" />\"));\n          } else {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            mem.push(\"<\".concat(node.name, \">\").concat(inner, \"</\").concat(node.name, \">\"));\n          }\n        } else if (isObject(child) && !isElement) {\n          const content = node.children[0] ? translationContent : null;\n          if (content) mem.push(content);\n        } else {\n          pushTranslatedJSX(child, translationContent, mem, i, node.children.length !== 1 || !translationContent);\n        }\n      } else if (node.type === 'text') {\n        const wrapTextNodes = i18nOptions.transWrapTextNodes;\n        const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n        if (wrapTextNodes) {\n          mem.push(createElement(wrapTextNodes, {\n            key: \"\".concat(node.name, \"-\").concat(i)\n          }, content));\n        } else {\n          mem.push(content);\n        }\n      }\n      return mem;\n    }, []);\n  };\n  const result = mapAST([{\n    dummy: true,\n    children: children || []\n  }], ast, getAsArray(children || []));\n  return getChildren(result[0]);\n};\nconst fixComponentProps = (component, index, translation) => {\n  const componentKey = component.key || index;\n  const comp = cloneElement(component, {\n    key: componentKey\n  });\n  if (!comp.props || !comp.props.children || translation.indexOf(\"\".concat(index, \"/>\")) < 0 && translation.indexOf(\"\".concat(index, \" />\")) < 0) {\n    return comp;\n  }\n  function Componentized() {\n    return createElement(Fragment, null, comp);\n  }\n  return createElement(Componentized, {\n    key: componentKey\n  });\n};\nconst generateArrayComponents = (components, translation) => components.map((c, index) => fixComponentProps(c, index, translation));\nconst generateObjectComponents = (components, translation) => {\n  const componentMap = {};\n  Object.keys(components).forEach(c => {\n    Object.assign(componentMap, {\n      [c]: fixComponentProps(components[c], c, translation)\n    });\n  });\n  return componentMap;\n};\nconst generateComponents = (components, translation, i18n, i18nKey) => {\n  if (!components) return null;\n  if (Array.isArray(components)) {\n    return generateArrayComponents(components, translation);\n  }\n  if (isObject(components)) {\n    return generateObjectComponents(components, translation);\n  }\n  warnOnce(i18n, 'TRANS_INVALID_COMPONENTS', \"<Trans /> \\\"components\\\" prop expects an object or array\", {\n    i18nKey\n  });\n  return null;\n};\nexport function Trans(_ref) {\n  var _i18n$options, _i18n$options2, _i18n$options3, _i18n$options4;\n  let {\n      children,\n      count,\n      parent,\n      i18nKey,\n      context,\n      tOptions = {},\n      values,\n      defaults,\n      components,\n      ns,\n      i18n: i18nFromProps,\n      t: tFromProps,\n      shouldUnescape\n    } = _ref,\n    additionalProps = _objectWithoutProperties(_ref, _excluded2);\n  const i18n = i18nFromProps || getI18n();\n  if (!i18n) {\n    warnOnce(i18n, 'NO_I18NEXT_INSTANCE', \"Trans: You need to pass in an i18next instance using i18nextReactModule\", {\n      i18nKey\n    });\n    return children;\n  }\n  const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n  const reactI18nextOptions = _objectSpread(_objectSpread({}, getDefaults()), (_i18n$options = i18n.options) === null || _i18n$options === void 0 ? void 0 : _i18n$options.react);\n  let namespaces = ns || t.ns || ((_i18n$options2 = i18n.options) === null || _i18n$options2 === void 0 ? void 0 : _i18n$options2.defaultNS);\n  namespaces = isString(namespaces) ? [namespaces] : namespaces || ['translation'];\n  const nodeAsString = nodesToString(children, reactI18nextOptions, i18n, i18nKey);\n  const defaultValue = defaults || nodeAsString || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n  const {\n    hashTransKey\n  } = reactI18nextOptions;\n  const key = i18nKey || (hashTransKey ? hashTransKey(nodeAsString || defaultValue) : nodeAsString || defaultValue);\n  if ((_i18n$options3 = i18n.options) !== null && _i18n$options3 !== void 0 && (_i18n$options3 = _i18n$options3.interpolation) !== null && _i18n$options3 !== void 0 && _i18n$options3.defaultVariables) {\n    values = values && Object.keys(values).length > 0 ? _objectSpread(_objectSpread({}, values), i18n.options.interpolation.defaultVariables) : _objectSpread({}, i18n.options.interpolation.defaultVariables);\n  }\n  const interpolationOverride = values || count !== undefined && !((_i18n$options4 = i18n.options) !== null && _i18n$options4 !== void 0 && (_i18n$options4 = _i18n$options4.interpolation) !== null && _i18n$options4 !== void 0 && _i18n$options4.alwaysFormat) || !children ? tOptions.interpolation : {\n    interpolation: _objectSpread(_objectSpread({}, tOptions.interpolation), {}, {\n      prefix: '#$?',\n      suffix: '?$#'\n    })\n  };\n  const combinedTOpts = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, tOptions), {}, {\n    context: context || tOptions.context,\n    count\n  }, values), interpolationOverride), {}, {\n    defaultValue,\n    ns: namespaces\n  });\n  const translation = key ? t(key, combinedTOpts) : defaultValue;\n  const generatedComponents = generateComponents(components, translation, i18n, i18nKey);\n  const content = renderNodes(generatedComponents || children, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n  const useAsParent = parent !== null && parent !== void 0 ? parent : reactI18nextOptions.defaultTransParent;\n  return useAsParent ? createElement(useAsParent, additionalProps, content) : content;\n}","map":{"version":3,"names":["Fragment","isValidElement","cloneElement","createElement","Children","HTML","isObject","isString","warn","warnOnce","getDefaults","getI18n","hasChildren","node","checkLength","_node$props$children","_node$props","base","props","children","length","getChildren","_node$props$children2","_node$props2","_node$props3","i18nIsDynamicList","getAsArray","hasValidReactChildren","Array","isArray","every","data","mergeProps","source","target","newTarget","_objectSpread","Object","assign","nodesToString","i18nOptions","i18n","i18nKey","_i18nOptions$transKee","stringNode","childrenArray","keepArray","transSupportBasicHtmlNodes","transKeepBasicHtmlNodesFor","forEach","child","childIndex","concat","type","childPropsCount","keys","shouldKeepChild","indexOf","childChildren","content","format","clone","_objectWithoutProperties","_excluded","value","renderNodes","targetString","combinedTOpts","shouldUnescape","emptyChildrenButNeedsHandling","RegExp","map","keep","join","test","getData","childs","ast","parse","opts","renderInner","rootReactNode","_child$props","mappedChildren","mapAST","pushTranslatedJSX","inner","mem","i","isVoid","dummy","push","key","undefined","c","_c$props$ref","ref","reactNode","astNode","reactNodes","astNodes","reduce","_node$children","translationContent","services","interpolator","interpolate","language","tmp","parseInt","name","attrs","isElement","isValidTranslationWithChildren","voidElement","isEmptyTransWithHTML","isKnownComponent","hasOwnProperty","call","Number","isNaN","parseFloat","wrapTextNodes","transWrapTextNodes","unescape","result","fixComponentProps","component","index","translation","componentKey","comp","Componentized","generateArrayComponents","components","generateObjectComponents","componentMap","generateComponents","Trans","_ref","_i18n$options","_i18n$options2","_i18n$options3","_i18n$options4","count","parent","context","tOptions","values","defaults","ns","i18nFromProps","t","tFromProps","additionalProps","_excluded2","bind","k","reactI18nextOptions","options","react","namespaces","defaultNS","nodeAsString","defaultValue","transEmptyNodeValue","hashTransKey","interpolation","defaultVariables","interpolationOverride","alwaysFormat","prefix","suffix","generatedComponents","useAsParent","defaultTransParent"],"sources":["C:/Users/forit/ai_hospitality_app/frontend/node_modules/react-i18next/dist/es/TransWithoutContext.js"],"sourcesContent":["import { Fragment, isValidElement, cloneElement, createElement, Children } from 'react';\nimport HTML from 'html-parse-stringify';\nimport { isObject, isString, warn, warnOnce } from './utils.js';\nimport { getDefaults } from './defaults.js';\nimport { getI18n } from './i18nInstance.js';\nconst hasChildren = (node, checkLength) => {\n  if (!node) return false;\n  const base = node.props?.children ?? node.children;\n  if (checkLength) return base.length > 0;\n  return !!base;\n};\nconst getChildren = node => {\n  if (!node) return [];\n  const children = node.props?.children ?? node.children;\n  return node.props?.i18nIsDynamicList ? getAsArray(children) : children;\n};\nconst hasValidReactChildren = children => Array.isArray(children) && children.every(isValidElement);\nconst getAsArray = data => Array.isArray(data) ? data : [data];\nconst mergeProps = (source, target) => {\n  const newTarget = {\n    ...target\n  };\n  newTarget.props = Object.assign(source.props, target.props);\n  return newTarget;\n};\nexport const nodesToString = (children, i18nOptions, i18n, i18nKey) => {\n  if (!children) return '';\n  let stringNode = '';\n  const childrenArray = getAsArray(children);\n  const keepArray = i18nOptions?.transSupportBasicHtmlNodes ? i18nOptions.transKeepBasicHtmlNodesFor ?? [] : [];\n  childrenArray.forEach((child, childIndex) => {\n    if (isString(child)) {\n      stringNode += `${child}`;\n      return;\n    }\n    if (isValidElement(child)) {\n      const {\n        props,\n        type\n      } = child;\n      const childPropsCount = Object.keys(props).length;\n      const shouldKeepChild = keepArray.indexOf(type) > -1;\n      const childChildren = props.children;\n      if (!childChildren && shouldKeepChild && !childPropsCount) {\n        stringNode += `<${type}/>`;\n        return;\n      }\n      if (!childChildren && (!shouldKeepChild || childPropsCount) || props.i18nIsDynamicList) {\n        stringNode += `<${childIndex}></${childIndex}>`;\n        return;\n      }\n      if (shouldKeepChild && childPropsCount === 1 && isString(childChildren)) {\n        stringNode += `<${type}>${childChildren}</${type}>`;\n        return;\n      }\n      const content = nodesToString(childChildren, i18nOptions, i18n, i18nKey);\n      stringNode += `<${childIndex}>${content}</${childIndex}>`;\n      return;\n    }\n    if (child === null) {\n      warn(i18n, 'TRANS_NULL_VALUE', `Passed in a null value as child`, {\n        i18nKey\n      });\n      return;\n    }\n    if (isObject(child)) {\n      const {\n        format,\n        ...clone\n      } = child;\n      const keys = Object.keys(clone);\n      if (keys.length === 1) {\n        const value = format ? `${keys[0]}, ${format}` : keys[0];\n        stringNode += `{{${value}}}`;\n        return;\n      }\n      warn(i18n, 'TRANS_INVALID_OBJ', `Invalid child - Object should only have keys {{ value, format }} (format is optional).`, {\n        i18nKey,\n        child\n      });\n      return;\n    }\n    warn(i18n, 'TRANS_INVALID_VAR', `Passed in a variable like {number} - pass variables for interpolation as full objects like {{number}}.`, {\n      i18nKey,\n      child\n    });\n  });\n  return stringNode;\n};\nconst renderNodes = (children, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) => {\n  if (targetString === '') return [];\n  const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.map(keep => `<${keep}`).join('|')).test(targetString);\n  if (!children && !emptyChildrenButNeedsHandling && !shouldUnescape) return [targetString];\n  const data = {};\n  const getData = childs => {\n    const childrenArray = getAsArray(childs);\n    childrenArray.forEach(child => {\n      if (isString(child)) return;\n      if (hasChildren(child)) getData(getChildren(child));else if (isObject(child) && !isValidElement(child)) Object.assign(data, child);\n    });\n  };\n  getData(children);\n  const ast = HTML.parse(`<0>${targetString}</0>`);\n  const opts = {\n    ...data,\n    ...combinedTOpts\n  };\n  const renderInner = (child, node, rootReactNode) => {\n    const childs = getChildren(child);\n    const mappedChildren = mapAST(childs, node.children, rootReactNode);\n    return hasValidReactChildren(childs) && mappedChildren.length === 0 || child.props?.i18nIsDynamicList ? childs : mappedChildren;\n  };\n  const pushTranslatedJSX = (child, inner, mem, i, isVoid) => {\n    if (child.dummy) {\n      child.children = inner;\n      mem.push(cloneElement(child, {\n        key: i\n      }, isVoid ? undefined : inner));\n    } else {\n      mem.push(...Children.map([child], c => {\n        const props = {\n          ...c.props\n        };\n        delete props.i18nIsDynamicList;\n        return createElement(c.type, {\n          ...props,\n          key: i,\n          ref: c.props.ref ?? c.ref\n        }, isVoid ? null : inner);\n      }));\n    }\n  };\n  const mapAST = (reactNode, astNode, rootReactNode) => {\n    const reactNodes = getAsArray(reactNode);\n    const astNodes = getAsArray(astNode);\n    return astNodes.reduce((mem, node, i) => {\n      const translationContent = node.children?.[0]?.content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n      if (node.type === 'tag') {\n        let tmp = reactNodes[parseInt(node.name, 10)];\n        if (rootReactNode.length === 1 && !tmp) tmp = rootReactNode[0][node.name];\n        if (!tmp) tmp = {};\n        const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n          props: node.attrs\n        }, tmp) : tmp;\n        const isElement = isValidElement(child);\n        const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n        const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && isObject(child) && child.dummy && !isElement;\n        const isKnownComponent = isObject(children) && Object.hasOwnProperty.call(children, node.name);\n        if (isString(child)) {\n          const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n          mem.push(value);\n        } else if (hasChildren(child) || isValidTranslationWithChildren) {\n          const inner = renderInner(child, node, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (isEmptyTransWithHTML) {\n          const inner = mapAST(reactNodes, node.children, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (Number.isNaN(parseFloat(node.name))) {\n          if (isKnownComponent) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n            if (node.voidElement) {\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }));\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }, inner));\n            }\n          } else if (node.voidElement) {\n            mem.push(`<${node.name} />`);\n          } else {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            mem.push(`<${node.name}>${inner}</${node.name}>`);\n          }\n        } else if (isObject(child) && !isElement) {\n          const content = node.children[0] ? translationContent : null;\n          if (content) mem.push(content);\n        } else {\n          pushTranslatedJSX(child, translationContent, mem, i, node.children.length !== 1 || !translationContent);\n        }\n      } else if (node.type === 'text') {\n        const wrapTextNodes = i18nOptions.transWrapTextNodes;\n        const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n        if (wrapTextNodes) {\n          mem.push(createElement(wrapTextNodes, {\n            key: `${node.name}-${i}`\n          }, content));\n        } else {\n          mem.push(content);\n        }\n      }\n      return mem;\n    }, []);\n  };\n  const result = mapAST([{\n    dummy: true,\n    children: children || []\n  }], ast, getAsArray(children || []));\n  return getChildren(result[0]);\n};\nconst fixComponentProps = (component, index, translation) => {\n  const componentKey = component.key || index;\n  const comp = cloneElement(component, {\n    key: componentKey\n  });\n  if (!comp.props || !comp.props.children || translation.indexOf(`${index}/>`) < 0 && translation.indexOf(`${index} />`) < 0) {\n    return comp;\n  }\n  function Componentized() {\n    return createElement(Fragment, null, comp);\n  }\n  return createElement(Componentized, {\n    key: componentKey\n  });\n};\nconst generateArrayComponents = (components, translation) => components.map((c, index) => fixComponentProps(c, index, translation));\nconst generateObjectComponents = (components, translation) => {\n  const componentMap = {};\n  Object.keys(components).forEach(c => {\n    Object.assign(componentMap, {\n      [c]: fixComponentProps(components[c], c, translation)\n    });\n  });\n  return componentMap;\n};\nconst generateComponents = (components, translation, i18n, i18nKey) => {\n  if (!components) return null;\n  if (Array.isArray(components)) {\n    return generateArrayComponents(components, translation);\n  }\n  if (isObject(components)) {\n    return generateObjectComponents(components, translation);\n  }\n  warnOnce(i18n, 'TRANS_INVALID_COMPONENTS', `<Trans /> \"components\" prop expects an object or array`, {\n    i18nKey\n  });\n  return null;\n};\nexport function Trans({\n  children,\n  count,\n  parent,\n  i18nKey,\n  context,\n  tOptions = {},\n  values,\n  defaults,\n  components,\n  ns,\n  i18n: i18nFromProps,\n  t: tFromProps,\n  shouldUnescape,\n  ...additionalProps\n}) {\n  const i18n = i18nFromProps || getI18n();\n  if (!i18n) {\n    warnOnce(i18n, 'NO_I18NEXT_INSTANCE', `Trans: You need to pass in an i18next instance using i18nextReactModule`, {\n      i18nKey\n    });\n    return children;\n  }\n  const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n  const reactI18nextOptions = {\n    ...getDefaults(),\n    ...i18n.options?.react\n  };\n  let namespaces = ns || t.ns || i18n.options?.defaultNS;\n  namespaces = isString(namespaces) ? [namespaces] : namespaces || ['translation'];\n  const nodeAsString = nodesToString(children, reactI18nextOptions, i18n, i18nKey);\n  const defaultValue = defaults || nodeAsString || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n  const {\n    hashTransKey\n  } = reactI18nextOptions;\n  const key = i18nKey || (hashTransKey ? hashTransKey(nodeAsString || defaultValue) : nodeAsString || defaultValue);\n  if (i18n.options?.interpolation?.defaultVariables) {\n    values = values && Object.keys(values).length > 0 ? {\n      ...values,\n      ...i18n.options.interpolation.defaultVariables\n    } : {\n      ...i18n.options.interpolation.defaultVariables\n    };\n  }\n  const interpolationOverride = values || count !== undefined && !i18n.options?.interpolation?.alwaysFormat || !children ? tOptions.interpolation : {\n    interpolation: {\n      ...tOptions.interpolation,\n      prefix: '#$?',\n      suffix: '?$#'\n    }\n  };\n  const combinedTOpts = {\n    ...tOptions,\n    context: context || tOptions.context,\n    count,\n    ...values,\n    ...interpolationOverride,\n    defaultValue,\n    ns: namespaces\n  };\n  const translation = key ? t(key, combinedTOpts) : defaultValue;\n  const generatedComponents = generateComponents(components, translation, i18n, i18nKey);\n  const content = renderNodes(generatedComponents || children, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n  const useAsParent = parent ?? reactI18nextOptions.defaultTransParent;\n  return useAsParent ? createElement(useAsParent, additionalProps, content) : content;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}